declare class Swift5Lexer {
    static grammarFileName: string;
    static channelNames: string[];
    static modeNames: string[];
    static literalNames: string[];
    static symbolicNames: string[];
    static ruleNames: string[];
    constructor(input: any);
    _interp: any;
    parenthesis: Stack;
    reset(): void;
    get atn(): any;
    action(localctx: any, ruleIndex: any, actionIndex: any): void;
    LPAREN_action(localctx: any, actionIndex: any): void;
    RPAREN_action(localctx: any, actionIndex: any): void;
    Interpolataion_single_line_action(localctx: any, actionIndex: any): void;
    Interpolataion_multi_line_action(localctx: any, actionIndex: any): void;
}
declare namespace Swift5Lexer {
    const EOF: any;
    const AS: number;
    const ALPHA: number;
    const BREAK: number;
    const CASE: number;
    const CATCH: number;
    const CLASS: number;
    const CONTINUE: number;
    const DEFAULT: number;
    const DEFER: number;
    const DO: number;
    const GUARD: number;
    const ELSE: number;
    const ENUM: number;
    const FOR: number;
    const FALLTHROUGH: number;
    const FUNC: number;
    const IN: number;
    const IF: number;
    const IMPORT: number;
    const INTERNAL: number;
    const FINAL: number;
    const OPEN: number;
    const PRIVATE: number;
    const PUBLIC: number;
    const WHERE: number;
    const WHILE: number;
    const LET: number;
    const VAR: number;
    const PROTOCOL: number;
    const GET: number;
    const SET: number;
    const WILL_SET: number;
    const DID_SET: number;
    const REPEAT: number;
    const SWITCH: number;
    const STRUCT: number;
    const RETURN: number;
    const THROW: number;
    const THROWS: number;
    const RETHROWS: number;
    const INDIRECT: number;
    const INIT: number;
    const DEINIT: number;
    const ASSOCIATED_TYPE: number;
    const EXTENSION: number;
    const SUBSCRIPT: number;
    const PREFIX: number;
    const INFIX: number;
    const LEFT: number;
    const RIGHT: number;
    const NONE: number;
    const PRECEDENCE_GROUP: number;
    const HIGHER_THAN: number;
    const LOWER_THAN: number;
    const ASSIGNMENT: number;
    const ASSOCIATIVITY: number;
    const POSTFIX: number;
    const OPERATOR: number;
    const TYPEALIAS: number;
    const OS: number;
    const ARCH: number;
    const SWIFT: number;
    const COMPILER: number;
    const CAN_IMPORT: number;
    const TARGET_ENVIRONMENT: number;
    const CONVENIENCE: number;
    const DYNAMIC: number;
    const LAZY: number;
    const OPTIONAL: number;
    const OVERRIDE: number;
    const REQUIRED: number;
    const STATIC: number;
    const WEAK: number;
    const UNOWNED: number;
    const SAFE: number;
    const UNSAFE: number;
    const MUTATING: number;
    const NONMUTATING: number;
    const FILE_PRIVATE: number;
    const IS: number;
    const TRY: number;
    const SUPER: number;
    const ANY: number;
    const FALSE: number;
    const RED: number;
    const BLUE: number;
    const GREEN: number;
    const RESOURCE_NAME: number;
    const TRUE: number;
    const NIL: number;
    const INOUT: number;
    const SOME: number;
    const TYPE: number;
    const PRECEDENCE: number;
    const SELF: number;
    const SELF_BIG: number;
    const MAC_OS: number;
    const I_OS: number;
    const OSX: number;
    const WATCH_OS: number;
    const TV_OS: number;
    const LINUX: number;
    const WINDOWS: number;
    const I386: number;
    const X86_64: number;
    const ARM: number;
    const ARM64: number;
    const SIMULATOR: number;
    const MAC_CATALYST: number;
    const I_OS_APPLICATION_EXTENSION: number;
    const MAC_CATALYST_APPLICATION_EXTENSION: number;
    const MAC_OS_APPLICATION_EXTENSION: number;
    const SOURCE_LOCATION: number;
    const FILE: number;
    const LINE: number;
    const ERROR: number;
    const WARNING: number;
    const AVAILABLE: number;
    const HASH_IF: number;
    const HASH_ELSEIF: number;
    const HASH_ELSE: number;
    const HASH_ENDIF: number;
    const HASH_FILE: number;
    const HASH_FILE_ID: number;
    const HASH_FILE_PATH: number;
    const HASH_LINE: number;
    const HASH_COLUMN: number;
    const HASH_FUNCTION: number;
    const HASH_DSO_HANDLE: number;
    const HASH_SELECTOR: number;
    const HASH_KEYPATH: number;
    const HASH_COLOR_LITERAL: number;
    const HASH_FILE_LITERAL: number;
    const HASH_IMAGE_LITERAL: number;
    const GETTER: number;
    const SETTER: number;
    const Identifier: number;
    const DOT: number;
    const LCURLY: number;
    const LPAREN: number;
    const LBRACK: number;
    const RCURLY: number;
    const RPAREN: number;
    const RBRACK: number;
    const COMMA: number;
    const COLON: number;
    const SEMI: number;
    const LT: number;
    const GT: number;
    const UNDERSCORE: number;
    const BANG: number;
    const QUESTION: number;
    const AT: number;
    const AND: number;
    const SUB: number;
    const EQUAL: number;
    const OR: number;
    const DIV: number;
    const ADD: number;
    const MUL: number;
    const MOD: number;
    const CARET: number;
    const TILDE: number;
    const HASH: number;
    const BACKTICK: number;
    const DOLLAR: number;
    const BACKSLASH: number;
    const Operator_head_other: number;
    const Operator_following_character: number;
    const Binary_literal: number;
    const Octal_literal: number;
    const Decimal_digits: number;
    const Decimal_literal: number;
    const Hexadecimal_literal: number;
    const Floating_point_literal: number;
    const WS: number;
    const HASHBANG: number;
    const Block_comment: number;
    const Line_comment: number;
    const Multi_line_extended_string_open: number;
    const Single_line_extended_string_open: number;
    const Multi_line_string_open: number;
    const Single_line_string_open: number;
    const Interpolataion_single_line: number;
    const Single_line_string_close: number;
    const Quoted_single_line_text: number;
    const Interpolataion_multi_line: number;
    const Multi_line_string_close: number;
    const Quoted_multi_line_text: number;
    const Single_line_extended_string_close: number;
    const Quoted_single_line_extended_text: number;
    const Multi_line_extended_string_close: number;
    const Quoted_multi_line_extended_text: number;
    const SingleLine: number;
    const MultiLine: number;
    const SingleLineExtended: number;
    const MultiLineExtended: number;
}
export default Swift5Lexer;
import { Stack } from "../util/Stack";
